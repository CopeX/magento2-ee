<?xml version="1.0"?>
<!--
/**
* Shop System Plugins - Terms of Use
*
* The plugins offered are provided free of charge by Wirecard Central Eastern Europe GmbH
* (abbreviated to Wirecard CEE) and are explicitly not part of the Wirecard CEE range of
* products and services.
*
* They have been tested and approved for full functionality in the standard configuration
* (status on delivery) of the corresponding shop system. They are under General Public
* License Version 2 (GPLv2) and can be used, developed and passed on to third parties under
* the same terms.
*
* However, Wirecard CEE does not provide any guarantee or accept any liability for any errors
* occurring when used in an enhanced, customized shop system configuration.
*
* Operation in an enhanced, customized configuration is at your own risk and requires a
* comprehensive test phase by the user of the plugin.
*
* Customers use the plugins at their own risk. Wirecard CEE does not guarantee their full
* functionality neither does Wirecard CEE assume liability for any disadvantages related to
* the use of the plugins. Additionally, Wirecard CEE does not guarantee the full functionality
* for customized shop systems or installed plugins of other vendors of plugins within the same
* shop system.
*
* Customers are responsible for testing the plugin's functionality before starting productive
* operation.
*
* By installing the plugin into the shop system the customer agrees to these terms of use.
* Please do not use the plugin if you do not agree to these terms of use!
*/
-->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <virtualType name="PaypalFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Wirecard\ElasticEngine\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form\Cc</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaypalValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">PaypalValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">PaypalCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers and config -->
    <virtualType name="PaypalValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaypalConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="PaypalConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">WirecardPaypalConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="WirecardElasticEngineConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="string">wirecard_elasticengine</argument>
            <argument name="pathPattern" xsi:type="string">%s/%s</argument>
        </arguments>
    </virtualType>
    <virtualType name="WirecardPaypalConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Wirecard\ElasticEngine\Model\Ui\ConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Validator -->
    <virtualType name="PaypalValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">PaypalCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="PaypalCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">Magento\Payment\Gateway\Config\Config</argument>
        </arguments>
    </virtualType>

    <!-- Commands -->
    <virtualType name="PaypalCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">PaypalInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>
    
    <!-- Initialize command -->
    <virtualType name="PaypalInitializeCommand" type="Wirecard\ElasticEngine\Gateway\WirecardCommand">
        <arguments>
            <argument name="transactionFactory" xsi:type="object">Wirecard\ElasticEngine\Gateway\Transaction\TransactionFactory</argument>
            <argument name="transactionServiceFactory" xsi:type="object">TransactionServiceFactory</argument>
            <argument name="handler" xsi:type="object">Wirecard\ElasticEngine\Gateway\Response\ResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Wirecard paymentSDK objects -->
    <virtualType name="TransactionServiceFactory" type="Wirecard\ElasticEngine\Gateway\Http\TransactionServiceFactory">
        <arguments>
            <argument name="paymentSdkConfigFactory" xsi:type="object">PaymentSdkConfigFactory</argument>
        </arguments>
    </virtualType>

    <virtualType name="PaymentSdkConfigFactory" type="Wirecard\ElasticEngine\Gateway\Http\PaymentSdkConfigFactory">
        <arguments>
            <argument name="eeConfig" xsi:type="object">WirecardElasticEngineConfig</argument>
            <argument name="methodConfig" xsi:type="object">WirecardPaypalConfig</argument>
            <argument name="productMetadata" xsi:type="object">Magento\Framework\App\ProductMetadata</argument>
            <argument name="moduleList" xsi:type="object">Magento\Framework\Module\ModuleListInterface</argument>
        </arguments>
    </virtualType>

</config>